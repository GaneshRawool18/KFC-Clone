plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
    // Google Services plugin for Firebase
    id "com.google.gms.google-services"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

android {
    namespace "com.example.kfc_app"
    compileSdk 35
    ndkVersion "25.1.8937393"

    defaultConfig {
        applicationId "com.example.kfc_app"
        minSdkVersion 23
        targetSdkVersion 35
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    buildTypes {
        release {
            // You should configure a proper release keystore for production
            signingConfig signingConfigs.debug
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            crunchPngs false
        }
    }

    // Optional: remove if using AGP 8.0+ as these are deprecated
    dexOptions {
        javaMaxHeapSize = "4g"
        preDexLibraries = false
    }

    aaptOptions {
        cruncherEnabled = false
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}

flutter {
    source = "../.."
}

dependencies {
    // Firebase BOM for consistent versions
    implementation platform('com.google.firebase:firebase-bom:32.7.4')

    // Firebase libraries
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-auth:22.3.1'
    implementation 'com.google.firebase:firebase-firestore'

    // Multidex support
    implementation 'androidx.multidex:multidex:2.0.1'

    // To fix some layout-related resource linking issues
    implementation 'androidx.window:window:1.0.0'
    implementation 'androidx.window:window-java:1.0.0'
}
